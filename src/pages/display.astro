---
import { Icon } from "astro-icon/components";
import Layout from "../layouts/Layout.astro";
import stF from "../assets/map/1F.svg";
import ndF from "../assets/map/2F.svg";
const room = [
  {
    name: "物理実験室",
    description: "FLL班の展示",
    floor: 1,
    x: 3,
    y: 21,
    width: 10.5,
    height: 16,
  },
  {
    name: "第二予備教室",
    description: "部内科学の甲子園",
    floor: 1,
    x: 43,
    y: 1,
    width: 6,
    height: 16,
    link: {
      title: "部内科甲の詳細へ",
      url: "/kako/",
    },
  },
  {
    name: "物理教室",
    description: "PC班展示(ゲーム, 3D)、　工学班展示、ATTO(部誌)の販売",
    floor: 1,
    x: 31.5,
    y: 1,
    width: 8,
    height: 15,
  },
  {
    name: "第四予備教室",
    description: "プラネタリウム",
    floor: 2,
    x: 17.5,
    y: 1,
    width: 4,
    height: 15,
  },
  {
    name: "生物教室",
    description:
      "数学班の部屋（自作問題の配布、採点など）、プラネタリウム整理券配布",
    floor: 1,
    x: 41,
    y: 21,
    width: 7,
    height: 16,
  },
];
---

<Layout title="展示内容">
  <div class="content">
    <h1><span><Icon name="line-md:cog" /></span>展示内容</h1>
    <h3>1F</h3>
    <div class="map-container">
      <img src={stF.src} alt="栄光学園1階マップ" class="1F" />
      <div id="mapBox1"></div>
    </div>
    <h3>2F</h3>
    <div class="map-container">
      <img src={ndF.src} alt="栄光学園2階マップ" class="2F" />
      <div id="mapBox2"></div>
    </div>
  </div>
  <div class="content">
    <p>展示場所を選択するとマップ上に表示されます</p>
    <div class="display">
      {
        room.map((r, index) => {
          const id = `radio-${index}`;
          return (
            <label for={id} class="item">
              <input
                type="radio"
                id={id}
                name="room"
                hidden
                onchange={`boxState('${id}', ${r.floor}, ${r.x}, ${r.y}, ${r.width}, ${r.height})`}
              />
              <div>
                <h2>{r.name}</h2>
                <p>{r.description}</p>
              </div>
            </label>
          );
        })
      }
    </div>
  </div>
  <script>
    declare global {
      interface Window {
        boxState: (
          id: string,
          floor: number,
          x: number,
          y: number,
          width: number,
          height: number
        ) => void;
      }
    }
    window.boxState = (id, floor, x, y, width, height) => {
      console.log(id, x, y, floor);
      const box = document.getElementById(floor === 1 ? "mapBox1" : "mapBox2");
      const radio = document.getElementById(id) as HTMLInputElement;
      if (radio && radio.checked) {
        if (box) {
          box.style.left = `${x}%`;
          box.style.top = `${y}%`;
          box.style.display = "block";
          box.style.width = `${width}%`;
          box.style.height = `${height}%`;
        }
        const otherBox = document.getElementById(
          floor === 1 ? "mapBox2" : "mapBox1"
        );
        if (otherBox) {
          otherBox.style.display = "none";
        }
      } else if (box) {
        box.style.display = "none";
      }
    };
  </script>
  <style lang="scss">
    .display {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(210px, 1fr));
      gap: 20px;
      .item {
        h2 {
          text-align: left;
        }
        border: 3px solid #29009b;
        background-color: #fefeff50;
        padding: 10px;
        border-radius: 5px;
        transition:
          filter 0.5s ease,
          transform 0.5s ease;
        &:hover {
          filter: drop-shadow(0 0 50px #29009b40);
          transform: scale(0.98);
        }
        &:active {
          filter: drop-shadow(0 0 50px #29009ba6);
          transform: scale(0.95);
        }

        &:has(input:checked) {
          filter: drop-shadow(0 0 50px #29009ba6);
          transform: scale(1.02);
        }
      }
    }
    .map-container {
      position: relative;
    }
    img {
      width: 100%;
    }
    @keyframes sway {
      0%,
      100% {
        box-shadow: 0 0 40px #29009b;
      }
      50% {
        box-shadow: 0 0 60px #29009b;
      }
    }

    #mapBox1,
    #mapBox2 {
      position: absolute;
      display: none;
      background-color: #29009b;
      animation: sway 2s infinite ease-in-out;
    }
  </style>
</Layout>
